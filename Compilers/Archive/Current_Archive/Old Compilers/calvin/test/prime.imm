1: unit, prime, -, -
2: <, n, 0, 4
3: jump, -, -, 10
4: -, n, -, $1
5: par, $1, V, -
6: par, $2, RET, -
7: call, -, -, prime
8: retv, $2, -, -
9: ret, -, -, -
10: <, n, 2, 12
11: jump, -, -, 14
12: retv, 0, -, -
13: ret, -, -, -
14: =, n, 2, 16
15: jump, -, -, 18
16: retv, 1, -, -
17: ret, -, -, -
18: %, n, 2, $3
19: =, $3, 0, 21
20: jump, -, -, 23
21: retv, 0, -, -
22: ret, -, -, -
23: :=, 3, -, i
24: /, n, 2, $4
25: <=, i, $4, 27
26: jump, -, -, 35
27: %, n, i, $5
28: =, $5, 0, 30
29: jump, -, -, 32
30: retv, 0, -, -
31: ret, -, -, -
32: +, i, 2, $6
33: :=, $6, -, i
34: jump, -, -, 24
35: retv, 1, -, -
36: ret, -, -, -
37: endu, prime, -, -
38: unit, main, -, -
39: par, "Please give the upper limit: ", V, -
40: call, -, -, PutString
41: par, $1, RET, -
42: call, -, -, GetInteger
43: :=, $1, -, limit
44: par, "Prime numbers between 0 and ", V, -
45: call, -, -, PutString
46: par, limit, V, -
47: call, -, -, PutInteger
48: par, ":\n\n", V, -
49: call, -, -, PutString
50: :=, 0, -, counter
51: >=, limit, 2, 53
52: jump, -, -, 57
53: +, counter, 1, $2
54: :=, $2, -, counter
55: par, "2\n", V, -
56: call, -, -, PutString
57: >=, limit, 3, 59
58: jump, -, -, 63
59: +, counter, 1, $3
60: :=, $3, -, counter
61: par, "3\n", V, -
62: call, -, -, PutString
63: :=, 6, -, number
64: <=, number, limit, 66
65: jump, -, -, 97
66: -, number, 1, $4
67: par, $4, V, -
68: par, $5, RET, -
69: call, -, -, prime
70: >, $5, 0, 72
71: jump, -, -, 79
72: +, counter, 1, $6
73: :=, $6, -, counter
74: -, number, 1, $7
75: par, $7, V, -
76: call, -, -, PutInteger
77: par, "\n", V, -
78: call, -, -, PutString
79: <>, number, limit, 81
80: jump, -, -, 94
81: +, number, 1, $8
82: par, $8, V, -
83: par, $9, RET, -
84: call, -, -, prime
85: >, $9, 0, 87
86: jump, -, -, 94
87: +, counter, 1, $10
88: :=, $10, -, counter
89: +, number, 1, $11
90: par, $11, V, -
91: call, -, -, PutInteger
92: par, "\n", V, -
93: call, -, -, PutString
94: +, number, 6, $12
95: :=, $12, -, number
96: jump, -, -, 64
97: par, "\n", V, -
98: call, -, -, PutString
99: par, counter, V, -
100: call, -, -, PutInteger
101: par, " prime number(s) were found.\n\n", V, -
102: call, -, -, PutString
103: endu, main, -, -
