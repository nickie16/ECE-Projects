State 169 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 $@2: %empty

    3 $@3: %empty

    4 program: $@1 extrn_and_start $@2 local_def_list $@3 compound_stmnt

    5 local_def_list: %empty
    6               | local_def local_def_list

    7 extrn_and_start: TK_KEYW_VOID TK_KEYW_MAIN TK_PAR_OPEN TK_PAR_CLOSE

    8 $@4: %empty

    9 extrn_and_start: func_prot $@4 extrn_and_start

   10 local_def: func_prot
   11          | func_def
   12          | var_def
   13          | error TK_SYMBOL_SEMICOLON

   14 func_prot: func_header TK_SYMBOL_SEMICOLON

   15 $@5: %empty

   16 $@6: %empty

   17 func_def: func_header $@5 local_def_list $@6 compound_stmnt

   18 $@7: %empty

   19 func_header: data_type TK_IDENTIFIER TK_PAR_OPEN $@7 maybe_formal TK_PAR_CLOSE

   20 $@8: %empty

   21 func_header: TK_KEYW_VOID TK_IDENTIFIER TK_PAR_OPEN $@8 maybe_formal TK_PAR_CLOSE

   22 maybe_formal: %empty
   23             | formal_param
   24             | formal_param TK_SYMBOL_COMMA maybe_formal

   25 formal_param: data_type TK_IDENTIFIER
   26             | data_type TK_IDENTIFIER TK_BRACKET_OPEN TK_BRACKET_CLOSE
   27             | data_type TK_SYMBOL_AMPER TK_IDENTIFIER
   28             | data_type TK_SYMBOL_AMPER TK_IDENTIFIER TK_BRACKET_OPEN TK_BRACKET_CLOSE

   29 data_type: TK_KEYW_INTEGER
   30          | TK_KEYW_CHAR

   31 var_def: data_type def_var_list TK_SYMBOL_SEMICOLON

   32 def_var_list: def_one_var
   33             | def_one_array
   34             | def_one_var TK_SYMBOL_COMMA def_var_list
   35             | def_one_array TK_SYMBOL_COMMA def_var_list
   36             | error TK_SYMBOL_COMMA def_var_list

   37 def_one_var: TK_IDENTIFIER

   38 def_one_array: TK_IDENTIFIER TK_BRACKET_OPEN TK_CONST_INTEGER TK_BRACKET_CLOSE

   39 statement: assignment
   40          | if_stmnt
   41          | while_stmnt
   42          | void_func_call
   43          | return_stmnt
   44          | compound_stmnt
   45          | empty_stmnt
   46          | error TK_SYMBOL_SEMICOLON

   47 assignment: l_value TK_ASSIGNMENT expression TK_SYMBOL_SEMICOLON

   48 l_value: TK_IDENTIFIER
   49        | TK_IDENTIFIER TK_BRACKET_OPEN expression TK_BRACKET_CLOSE

   50 $@9: %empty

   51 if_stmnt: TK_KEYW_IF TK_PAR_OPEN b_expression TK_PAR_CLOSE $@9 statement if_tail

   52 if_tail: %empty

   53 @10: %empty

   54 if_tail: TK_KEYW_ELSE @10 statement

   55 @11: %empty

   56 $@12: %empty

   57 while_stmnt: TK_KEYW_WHILE TK_PAR_OPEN @11 b_expression TK_PAR_CLOSE $@12 statement

   58 void_func_call: func_call TK_SYMBOL_SEMICOLON

   59 $@13: %empty

   60 func_call: TK_IDENTIFIER TK_PAR_OPEN $@13 actual_param_l TK_PAR_CLOSE

   61 actual_param_l: %empty
   62               | actual_param
   63               | actual_param TK_SYMBOL_COMMA actual_param_l

   64 actual_param: pure_expr
   65             | TK_IDENTIFIER
   66             | TK_IDENTIFIER TK_BRACKET_OPEN expression TK_BRACKET_CLOSE
   67             | TK_CONST_STRING

   68 return_stmnt: TK_KEYW_RETURN TK_SYMBOL_SEMICOLON
   69             | TK_KEYW_RETURN expression TK_SYMBOL_SEMICOLON

   70 empty_stmnt: TK_SYMBOL_SEMICOLON

   71 compound_stmnt: TK_BRACE_OPEN stmnt_list TK_BRACE_CLOSE

   72 stmnt_list: %empty
   73           | statement stmnt_list

   74 $@14: %empty

   75 b_expression: b_expression TK_OP_OR $@14 b_expression

   76 $@15: %empty

   77 b_expression: b_expression TK_OP_AND $@15 b_expression
   78             | TK_OP_NOT b_expression
   79             | TK_PAR_OPEN b_expression TK_PAR_CLOSE
   80             | expression TK_OP_EQ expression
   81             | expression TK_OP_NE expression
   82             | expression TK_OP_GT expression
   83             | expression TK_OP_LT expression
   84             | expression TK_OP_GE expression
   85             | expression TK_OP_LE expression

   86 expression: pure_expr
   87           | l_value

   88 pure_expr: expression TK_OP_PLUS expression
   89          | expression TK_OP_MINUS expression
   90          | expression TK_OP_MULT expression
   91          | expression TK_OP_DIV expression
   92          | expression TK_OP_MOD expression
   93          | TK_OP_PLUS expression
   94          | TK_OP_MINUS expression
   95          | TK_CONST_INTEGER
   96          | TK_CONST_CHAR
   97          | func_call
   98          | TK_PAR_OPEN expression TK_PAR_CLOSE


Terminals, with rules where they appear

$end (0) 0
error (256) 13 36 46
TK_KEYW_CHAR (258) 30
TK_KEYW_ELSE (259) 54
TK_KEYW_IF (260) 51
TK_KEYW_INTEGER (261) 29
TK_KEYW_MAIN (262) 7
TK_KEYW_RETURN (263) 68 69
TK_KEYW_VOID (264) 7 21
TK_KEYW_WHILE (265) 57
TK_ASSIGNMENT (266) 47
TK_OP_PLUS (267) 88 93
TK_OP_MINUS (268) 89 94
TK_OP_MULT (269) 90
TK_OP_DIV (270) 91
TK_OP_MOD (271) 92
TK_OP_EQ (272) 80
TK_OP_NE (273) 81
TK_OP_GE (274) 84
TK_OP_GT (275) 82
TK_OP_LE (276) 85
TK_OP_LT (277) 83
TK_OP_OR (278) 75
TK_OP_AND (279) 77
TK_OP_NOT (280) 78
UNARY (281)
TK_BRACE_OPEN (282) 71
TK_BRACE_CLOSE (283) 71
TK_BRACKET_OPEN (284) 26 28 38 49 66
TK_BRACKET_CLOSE (285) 26 28 38 49 66
TK_PAR_OPEN (286) 7 19 21 51 57 60 79 98
TK_PAR_CLOSE (287) 7 19 21 51 57 60 79 98
TK_SYMBOL_COMMA (288) 24 34 35 36 63
TK_SYMBOL_AMPER (289) 27 28
TK_SYMBOL_SEMICOLON (290) 13 14 31 46 47 58 68 69 70
TK_IDENTIFIER (291) 19 21 25 26 27 28 37 38 48 49 60 65 66
TK_CONST_INTEGER (292) 38 95
TK_CONST_CHAR (293) 96
TK_CONST_STRING (294) 67


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
program (41)
    on left: 4, on right: 0
$@1 (42)
    on left: 1, on right: 4
$@2 (43)
    on left: 2, on right: 4
$@3 (44)
    on left: 3, on right: 4
local_def_list (45)
    on left: 5 6, on right: 4 6 17
extrn_and_start (46)
    on left: 7 9, on right: 4 9
$@4 (47)
    on left: 8, on right: 9
local_def (48)
    on left: 10 11 12 13, on right: 6
func_prot (49)
    on left: 14, on right: 9 10
func_def (50)
    on left: 17, on right: 11
$@5 (51)
    on left: 15, on right: 17
$@6 (52)
    on left: 16, on right: 17
func_header (53)
    on left: 19 21, on right: 14 17
$@7 (54)
    on left: 18, on right: 19
$@8 (55)
    on left: 20, on right: 21
maybe_formal (56)
    on left: 22 23 24, on right: 19 21 24
formal_param (57)
    on left: 25 26 27 28, on right: 23 24
data_type (58)
    on left: 29 30, on right: 19 25 26 27 28 31
var_def (59)
    on left: 31, on right: 12
def_var_list (60)
    on left: 32 33 34 35 36, on right: 31 34 35 36
def_one_var (61)
    on left: 37, on right: 32 34
def_one_array (62)
    on left: 38, on right: 33 35
statement (63)
    on left: 39 40 41 42 43 44 45 46, on right: 51 54 57 73
assignment (64)
    on left: 47, on right: 39
l_value (65)
    on left: 48 49, on right: 47 87
if_stmnt (66)
    on left: 51, on right: 40
$@9 (67)
    on left: 50, on right: 51
if_tail (68)
    on left: 52 54, on right: 51
@10 (69)
    on left: 53, on right: 54
while_stmnt (70)
    on left: 57, on right: 41
@11 (71)
    on left: 55, on right: 57
$@12 (72)
    on left: 56, on right: 57
void_func_call (73)
    on left: 58, on right: 42
func_call (74)
    on left: 60, on right: 58 97
$@13 (75)
    on left: 59, on right: 60
actual_param_l (76)
    on left: 61 62 63, on right: 60 63
actual_param (77)
    on left: 64 65 66 67, on right: 62 63
return_stmnt (78)
    on left: 68 69, on right: 43
empty_stmnt (79)
    on left: 70, on right: 45
compound_stmnt (80)
    on left: 71, on right: 4 17 44
stmnt_list (81)
    on left: 72 73, on right: 71 73
b_expression (82)
    on left: 75 77 78 79 80 81 82 83 84 85, on right: 51 57 75 77 78
    79
$@14 (83)
    on left: 74, on right: 75
$@15 (84)
    on left: 76, on right: 77
expression (85)
    on left: 86 87, on right: 47 49 66 69 80 81 82 83 84 85 88 89 90
    91 92 93 94 98
pure_expr (86)
    on left: 88 89 90 91 92 93 94 95 96 97 98, on right: 64 86


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    4 program: $@1 . extrn_and_start $@2 local_def_list $@3 compound_stmnt

    TK_KEYW_CHAR     shift, and go to state 4
    TK_KEYW_INTEGER  shift, and go to state 5
    TK_KEYW_VOID     shift, and go to state 6

    extrn_and_start  go to state 7
    func_prot        go to state 8
    func_header      go to state 9
    data_type        go to state 10


State 3

    0 $accept: program $end .

    $default  accept


State 4

   30 data_type: TK_KEYW_CHAR .

    $default  reduce using rule 30 (data_type)


State 5

   29 data_type: TK_KEYW_INTEGER .

    $default  reduce using rule 29 (data_type)


State 6

    7 extrn_and_start: TK_KEYW_VOID . TK_KEYW_MAIN TK_PAR_OPEN TK_PAR_CLOSE
   21 func_header: TK_KEYW_VOID . TK_IDENTIFIER TK_PAR_OPEN $@8 maybe_formal TK_PAR_CLOSE

    TK_KEYW_MAIN   shift, and go to state 11
    TK_IDENTIFIER  shift, and go to state 12


State 7

    4 program: $@1 extrn_and_start . $@2 local_def_list $@3 compound_stmnt

    $default  reduce using rule 2 ($@2)

    $@2  go to state 13


State 8

    9 extrn_and_start: func_prot . $@4 extrn_and_start

    $default  reduce using rule 8 ($@4)

    $@4  go to state 14


State 9

   14 func_prot: func_header . TK_SYMBOL_SEMICOLON

    TK_SYMBOL_SEMICOLON  shift, and go to state 15


State 10

   19 func_header: data_type . TK_IDENTIFIER TK_PAR_OPEN $@7 maybe_formal TK_PAR_CLOSE

    TK_IDENTIFIER  shift, and go to state 16


State 11

    7 extrn_and_start: TK_KEYW_VOID TK_KEYW_MAIN . TK_PAR_OPEN TK_PAR_CLOSE

    TK_PAR_OPEN  shift, and go to state 17


State 12

   21 func_header: TK_KEYW_VOID TK_IDENTIFIER . TK_PAR_OPEN $@8 maybe_formal TK_PAR_CLOSE

    TK_PAR_OPEN  shift, and go to state 18


State 13

    4 program: $@1 extrn_and_start $@2 . local_def_list $@3 compound_stmnt

    error            shift, and go to state 19
    TK_KEYW_CHAR     shift, and go to state 4
    TK_KEYW_INTEGER  shift, and go to state 5
    TK_KEYW_VOID     shift, and go to state 20

    TK_BRACE_OPEN  reduce using rule 5 (local_def_list)

    local_def_list  go to state 21
    local_def       go to state 22
    func_prot       go to state 23
    func_def        go to state 24
    func_header     go to state 25
    data_type       go to state 26
    var_def         go to state 27


State 14

    9 extrn_and_start: func_prot $@4 . extrn_and_start

    TK_KEYW_CHAR     shift, and go to state 4
    TK_KEYW_INTEGER  shift, and go to state 5
    TK_KEYW_VOID     shift, and go to state 6

    extrn_and_start  go to state 28
    func_prot        go to state 8
    func_header      go to state 9
    data_type        go to state 10


State 15

   14 func_prot: func_header TK_SYMBOL_SEMICOLON .

    $default  reduce using rule 14 (func_prot)


State 16

   19 func_header: data_type TK_IDENTIFIER . TK_PAR_OPEN $@7 maybe_formal TK_PAR_CLOSE

    TK_PAR_OPEN  shift, and go to state 29


State 17

    7 extrn_and_start: TK_KEYW_VOID TK_KEYW_MAIN TK_PAR_OPEN . TK_PAR_CLOSE

    TK_PAR_CLOSE  shift, and go to state 30


State 18

   21 func_header: TK_KEYW_VOID TK_IDENTIFIER TK_PAR_OPEN . $@8 maybe_formal TK_PAR_CLOSE

    $default  reduce using rule 20 ($@8)

    $@8  go to state 31


State 19

   13 local_def: error . TK_SYMBOL_SEMICOLON

    TK_SYMBOL_SEMICOLON  shift, and go to state 32


State 20

   21 func_header: TK_KEYW_VOID . TK_IDENTIFIER TK_PAR_OPEN $@8 maybe_formal TK_PAR_CLOSE

    TK_IDENTIFIER  shift, and go to state 12


State 21

    4 program: $@1 extrn_and_start $@2 local_def_list . $@3 compound_stmnt

    $default  reduce using rule 3 ($@3)

    $@3  go to state 33


State 22

    6 local_def_list: local_def . local_def_list

    error            shift, and go to state 19
    TK_KEYW_CHAR     shift, and go to state 4
    TK_KEYW_INTEGER  shift, and go to state 5
    TK_KEYW_VOID     shift, and go to state 20

    TK_BRACE_OPEN  reduce using rule 5 (local_def_list)

    local_def_list  go to state 34
    local_def       go to state 22
    func_prot       go to state 23
    func_def        go to state 24
    func_header     go to state 25
    data_type       go to state 26
    var_def         go to state 27


State 23

   10 local_def: func_prot .

    $default  reduce using rule 10 (local_def)


State 24

   11 local_def: func_def .

    $default  reduce using rule 11 (local_def)


State 25

   14 func_prot: func_header . TK_SYMBOL_SEMICOLON
   17 func_def: func_header . $@5 local_def_list $@6 compound_stmnt

    TK_SYMBOL_SEMICOLON  shift, and go to state 15

    $default  reduce using rule 15 ($@5)

    $@5  go to state 35


State 26

   19 func_header: data_type . TK_IDENTIFIER TK_PAR_OPEN $@7 maybe_formal TK_PAR_CLOSE
   31 var_def: data_type . def_var_list TK_SYMBOL_SEMICOLON

    error          shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37

    def_var_list   go to state 38
    def_one_var    go to state 39
    def_one_array  go to state 40


State 27

   12 local_def: var_def .

    $default  reduce using rule 12 (local_def)


State 28

    9 extrn_and_start: func_prot $@4 extrn_and_start .

    $default  reduce using rule 9 (extrn_and_start)


State 29

   19 func_header: data_type TK_IDENTIFIER TK_PAR_OPEN . $@7 maybe_formal TK_PAR_CLOSE

    $default  reduce using rule 18 ($@7)

    $@7  go to state 41


State 30

    7 extrn_and_start: TK_KEYW_VOID TK_KEYW_MAIN TK_PAR_OPEN TK_PAR_CLOSE .

    $default  reduce using rule 7 (extrn_and_start)


State 31

   21 func_header: TK_KEYW_VOID TK_IDENTIFIER TK_PAR_OPEN $@8 . maybe_formal TK_PAR_CLOSE

    TK_KEYW_CHAR     shift, and go to state 4
    TK_KEYW_INTEGER  shift, and go to state 5

    $default  reduce using rule 22 (maybe_formal)

    maybe_formal  go to state 42
    formal_param  go to state 43
    data_type     go to state 44


State 32

   13 local_def: error TK_SYMBOL_SEMICOLON .

    $default  reduce using rule 13 (local_def)


State 33

    4 program: $@1 extrn_and_start $@2 local_def_list $@3 . compound_stmnt

    TK_BRACE_OPEN  shift, and go to state 45

    compound_stmnt  go to state 46


State 34

    6 local_def_list: local_def local_def_list .

    $default  reduce using rule 6 (local_def_list)


State 35

   17 func_def: func_header $@5 . local_def_list $@6 compound_stmnt

    error            shift, and go to state 19
    TK_KEYW_CHAR     shift, and go to state 4
    TK_KEYW_INTEGER  shift, and go to state 5
    TK_KEYW_VOID     shift, and go to state 20

    TK_BRACE_OPEN  reduce using rule 5 (local_def_list)

    local_def_list  go to state 47
    local_def       go to state 22
    func_prot       go to state 23
    func_def        go to state 24
    func_header     go to state 25
    data_type       go to state 26
    var_def         go to state 27


State 36

   36 def_var_list: error . TK_SYMBOL_COMMA def_var_list

    TK_SYMBOL_COMMA  shift, and go to state 48


State 37

   19 func_header: data_type TK_IDENTIFIER . TK_PAR_OPEN $@7 maybe_formal TK_PAR_CLOSE
   37 def_one_var: TK_IDENTIFIER .
   38 def_one_array: TK_IDENTIFIER . TK_BRACKET_OPEN TK_CONST_INTEGER TK_BRACKET_CLOSE

    TK_BRACKET_OPEN  shift, and go to state 49
    TK_PAR_OPEN      shift, and go to state 29

    $default  reduce using rule 37 (def_one_var)


State 38

   31 var_def: data_type def_var_list . TK_SYMBOL_SEMICOLON

    TK_SYMBOL_SEMICOLON  shift, and go to state 50


State 39

   32 def_var_list: def_one_var .
   34             | def_one_var . TK_SYMBOL_COMMA def_var_list

    TK_SYMBOL_COMMA  shift, and go to state 51

    $default  reduce using rule 32 (def_var_list)


State 40

   33 def_var_list: def_one_array .
   35             | def_one_array . TK_SYMBOL_COMMA def_var_list

    TK_SYMBOL_COMMA  shift, and go to state 52

    $default  reduce using rule 33 (def_var_list)


State 41

   19 func_header: data_type TK_IDENTIFIER TK_PAR_OPEN $@7 . maybe_formal TK_PAR_CLOSE

    TK_KEYW_CHAR     shift, and go to state 4
    TK_KEYW_INTEGER  shift, and go to state 5

    $default  reduce using rule 22 (maybe_formal)

    maybe_formal  go to state 53
    formal_param  go to state 43
    data_type     go to state 44


State 42

   21 func_header: TK_KEYW_VOID TK_IDENTIFIER TK_PAR_OPEN $@8 maybe_formal . TK_PAR_CLOSE

    TK_PAR_CLOSE  shift, and go to state 54


State 43

   23 maybe_formal: formal_param .
   24             | formal_param . TK_SYMBOL_COMMA maybe_formal

    TK_SYMBOL_COMMA  shift, and go to state 55

    $default  reduce using rule 23 (maybe_formal)


State 44

   25 formal_param: data_type . TK_IDENTIFIER
   26             | data_type . TK_IDENTIFIER TK_BRACKET_OPEN TK_BRACKET_CLOSE
   27             | data_type . TK_SYMBOL_AMPER TK_IDENTIFIER
   28             | data_type . TK_SYMBOL_AMPER TK_IDENTIFIER TK_BRACKET_OPEN TK_BRACKET_CLOSE

    TK_SYMBOL_AMPER  shift, and go to state 56
    TK_IDENTIFIER    shift, and go to state 57


State 45

   71 compound_stmnt: TK_BRACE_OPEN . stmnt_list TK_BRACE_CLOSE

    error                shift, and go to state 58
    TK_KEYW_IF           shift, and go to state 59
    TK_KEYW_RETURN       shift, and go to state 60
    TK_KEYW_WHILE        shift, and go to state 61
    TK_BRACE_OPEN        shift, and go to state 45
    TK_SYMBOL_SEMICOLON  shift, and go to state 62
    TK_IDENTIFIER        shift, and go to state 63

    TK_BRACE_CLOSE  reduce using rule 72 (stmnt_list)

    statement       go to state 64
    assignment      go to state 65
    l_value         go to state 66
    if_stmnt        go to state 67
    while_stmnt     go to state 68
    void_func_call  go to state 69
    func_call       go to state 70
    return_stmnt    go to state 71
    empty_stmnt     go to state 72
    compound_stmnt  go to state 73
    stmnt_list      go to state 74


State 46

    4 program: $@1 extrn_and_start $@2 local_def_list $@3 compound_stmnt .

    $default  reduce using rule 4 (program)


State 47

   17 func_def: func_header $@5 local_def_list . $@6 compound_stmnt

    $default  reduce using rule 16 ($@6)

    $@6  go to state 75


State 48

   36 def_var_list: error TK_SYMBOL_COMMA . def_var_list

    error          shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 76

    def_var_list   go to state 77
    def_one_var    go to state 39
    def_one_array  go to state 40


State 49

   38 def_one_array: TK_IDENTIFIER TK_BRACKET_OPEN . TK_CONST_INTEGER TK_BRACKET_CLOSE

    TK_CONST_INTEGER  shift, and go to state 78


State 50

   31 var_def: data_type def_var_list TK_SYMBOL_SEMICOLON .

    $default  reduce using rule 31 (var_def)


State 51

   34 def_var_list: def_one_var TK_SYMBOL_COMMA . def_var_list

    error          shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 76

    def_var_list   go to state 79
    def_one_var    go to state 39
    def_one_array  go to state 40


State 52

   35 def_var_list: def_one_array TK_SYMBOL_COMMA . def_var_list

    error          shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 76

    def_var_list   go to state 80
    def_one_var    go to state 39
    def_one_array  go to state 40


State 53

   19 func_header: data_type TK_IDENTIFIER TK_PAR_OPEN $@7 maybe_formal . TK_PAR_CLOSE

    TK_PAR_CLOSE  shift, and go to state 81


State 54

   21 func_header: TK_KEYW_VOID TK_IDENTIFIER TK_PAR_OPEN $@8 maybe_formal TK_PAR_CLOSE .

    $default  reduce using rule 21 (func_header)


State 55

   24 maybe_formal: formal_param TK_SYMBOL_COMMA . maybe_formal

    TK_KEYW_CHAR     shift, and go to state 4
    TK_KEYW_INTEGER  shift, and go to state 5

    $default  reduce using rule 22 (maybe_formal)

    maybe_formal  go to state 82
    formal_param  go to state 43
    data_type     go to state 44


State 56

   27 formal_param: data_type TK_SYMBOL_AMPER . TK_IDENTIFIER
   28             | data_type TK_SYMBOL_AMPER . TK_IDENTIFIER TK_BRACKET_OPEN TK_BRACKET_CLOSE

    TK_IDENTIFIER  shift, and go to state 83


State 57

   25 formal_param: data_type TK_IDENTIFIER .
   26             | data_type TK_IDENTIFIER . TK_BRACKET_OPEN TK_BRACKET_CLOSE

    TK_BRACKET_OPEN  shift, and go to state 84

    $default  reduce using rule 25 (formal_param)


State 58

   46 statement: error . TK_SYMBOL_SEMICOLON

    TK_SYMBOL_SEMICOLON  shift, and go to state 85


State 59

   51 if_stmnt: TK_KEYW_IF . TK_PAR_OPEN b_expression TK_PAR_CLOSE $@9 statement if_tail

    TK_PAR_OPEN  shift, and go to state 86


State 60

   68 return_stmnt: TK_KEYW_RETURN . TK_SYMBOL_SEMICOLON
   69             | TK_KEYW_RETURN . expression TK_SYMBOL_SEMICOLON

    TK_OP_PLUS           shift, and go to state 87
    TK_OP_MINUS          shift, and go to state 88
    TK_PAR_OPEN          shift, and go to state 89
    TK_SYMBOL_SEMICOLON  shift, and go to state 90
    TK_IDENTIFIER        shift, and go to state 63
    TK_CONST_INTEGER     shift, and go to state 91
    TK_CONST_CHAR        shift, and go to state 92

    l_value     go to state 93
    func_call   go to state 94
    expression  go to state 95
    pure_expr   go to state 96


State 61

   57 while_stmnt: TK_KEYW_WHILE . TK_PAR_OPEN @11 b_expression TK_PAR_CLOSE $@12 statement

    TK_PAR_OPEN  shift, and go to state 97


State 62

   70 empty_stmnt: TK_SYMBOL_SEMICOLON .

    $default  reduce using rule 70 (empty_stmnt)


State 63

   48 l_value: TK_IDENTIFIER .
   49        | TK_IDENTIFIER . TK_BRACKET_OPEN expression TK_BRACKET_CLOSE
   60 func_call: TK_IDENTIFIER . TK_PAR_OPEN $@13 actual_param_l TK_PAR_CLOSE

    TK_BRACKET_OPEN  shift, and go to state 98
    TK_PAR_OPEN      shift, and go to state 99

    $default  reduce using rule 48 (l_value)


State 64

   73 stmnt_list: statement . stmnt_list

    error                shift, and go to state 58
    TK_KEYW_IF           shift, and go to state 59
    TK_KEYW_RETURN       shift, and go to state 60
    TK_KEYW_WHILE        shift, and go to state 61
    TK_BRACE_OPEN        shift, and go to state 45
    TK_SYMBOL_SEMICOLON  shift, and go to state 62
    TK_IDENTIFIER        shift, and go to state 63

    TK_BRACE_CLOSE  reduce using rule 72 (stmnt_list)

    statement       go to state 64
    assignment      go to state 65
    l_value         go to state 66
    if_stmnt        go to state 67
    while_stmnt     go to state 68
    void_func_call  go to state 69
    func_call       go to state 70
    return_stmnt    go to state 71
    empty_stmnt     go to state 72
    compound_stmnt  go to state 73
    stmnt_list      go to state 100


State 65

   39 statement: assignment .

    $default  reduce using rule 39 (statement)


State 66

   47 assignment: l_value . TK_ASSIGNMENT expression TK_SYMBOL_SEMICOLON

    TK_ASSIGNMENT  shift, and go to state 101


State 67

   40 statement: if_stmnt .

    $default  reduce using rule 40 (statement)


State 68

   41 statement: while_stmnt .

    $default  reduce using rule 41 (statement)


State 69

   42 statement: void_func_call .

    $default  reduce using rule 42 (statement)


State 70

   58 void_func_call: func_call . TK_SYMBOL_SEMICOLON

    TK_SYMBOL_SEMICOLON  shift, and go to state 102


State 71

   43 statement: return_stmnt .

    $default  reduce using rule 43 (statement)


State 72

   45 statement: empty_stmnt .

    $default  reduce using rule 45 (statement)


State 73

   44 statement: compound_stmnt .

    $default  reduce using rule 44 (statement)


State 74

   71 compound_stmnt: TK_BRACE_OPEN stmnt_list . TK_BRACE_CLOSE

    TK_BRACE_CLOSE  shift, and go to state 103


State 75

   17 func_def: func_header $@5 local_def_list $@6 . compound_stmnt

    TK_BRACE_OPEN  shift, and go to state 45

    compound_stmnt  go to state 104


State 76

   37 def_one_var: TK_IDENTIFIER .
   38 def_one_array: TK_IDENTIFIER . TK_BRACKET_OPEN TK_CONST_INTEGER TK_BRACKET_CLOSE

    TK_BRACKET_OPEN  shift, and go to state 49

    $default  reduce using rule 37 (def_one_var)


State 77

   36 def_var_list: error TK_SYMBOL_COMMA def_var_list .

    $default  reduce using rule 36 (def_var_list)


State 78

   38 def_one_array: TK_IDENTIFIER TK_BRACKET_OPEN TK_CONST_INTEGER . TK_BRACKET_CLOSE

    TK_BRACKET_CLOSE  shift, and go to state 105


State 79

   34 def_var_list: def_one_var TK_SYMBOL_COMMA def_var_list .

    $default  reduce using rule 34 (def_var_list)


State 80

   35 def_var_list: def_one_array TK_SYMBOL_COMMA def_var_list .

    $default  reduce using rule 35 (def_var_list)


State 81

   19 func_header: data_type TK_IDENTIFIER TK_PAR_OPEN $@7 maybe_formal TK_PAR_CLOSE .

    $default  reduce using rule 19 (func_header)


State 82

   24 maybe_formal: formal_param TK_SYMBOL_COMMA maybe_formal .

    $default  reduce using rule 24 (maybe_formal)


State 83

   27 formal_param: data_type TK_SYMBOL_AMPER TK_IDENTIFIER .
   28             | data_type TK_SYMBOL_AMPER TK_IDENTIFIER . TK_BRACKET_OPEN TK_BRACKET_CLOSE

    TK_BRACKET_OPEN  shift, and go to state 106

    $default  reduce using rule 27 (formal_param)


State 84

   26 formal_param: data_type TK_IDENTIFIER TK_BRACKET_OPEN . TK_BRACKET_CLOSE

    TK_BRACKET_CLOSE  shift, and go to state 107


State 85

   46 statement: error TK_SYMBOL_SEMICOLON .

    $default  reduce using rule 46 (statement)


State 86

   51 if_stmnt: TK_KEYW_IF TK_PAR_OPEN . b_expression TK_PAR_CLOSE $@9 statement if_tail

    TK_OP_PLUS        shift, and go to state 87
    TK_OP_MINUS       shift, and go to state 88
    TK_OP_NOT         shift, and go to state 108
    TK_PAR_OPEN       shift, and go to state 109
    TK_IDENTIFIER     shift, and go to state 63
    TK_CONST_INTEGER  shift, and go to state 91
    TK_CONST_CHAR     shift, and go to state 92

    l_value       go to state 93
    func_call     go to state 94
    b_expression  go to state 110
    expression    go to state 111
    pure_expr     go to state 96


State 87

   93 pure_expr: TK_OP_PLUS . expression

    TK_OP_PLUS        shift, and go to state 87
    TK_OP_MINUS       shift, and go to state 88
    TK_PAR_OPEN       shift, and go to state 89
    TK_IDENTIFIER     shift, and go to state 63
    TK_CONST_INTEGER  shift, and go to state 91
    TK_CONST_CHAR     shift, and go to state 92

    l_value     go to state 93
    func_call   go to state 94
    expression  go to state 112
    pure_expr   go to state 96


State 88

   94 pure_expr: TK_OP_MINUS . expression

    TK_OP_PLUS        shift, and go to state 87
    TK_OP_MINUS       shift, and go to state 88
    TK_PAR_OPEN       shift, and go to state 89
    TK_IDENTIFIER     shift, and go to state 63
    TK_CONST_INTEGER  shift, and go to state 91
    TK_CONST_CHAR     shift, and go to state 92

    l_value     go to state 93
    func_call   go to state 94
    expression  go to state 113
    pure_expr   go to state 96


State 89

   98 pure_expr: TK_PAR_OPEN . expression TK_PAR_CLOSE

    TK_OP_PLUS        shift, and go to state 87
    TK_OP_MINUS       shift, and go to state 88
    TK_PAR_OPEN       shift, and go to state 89
    TK_IDENTIFIER     shift, and go to state 63
    TK_CONST_INTEGER  shift, and go to state 91
    TK_CONST_CHAR     shift, and go to state 92

    l_value     go to state 93
    func_call   go to state 94
    expression  go to state 114
    pure_expr   go to state 96


State 90

   68 return_stmnt: TK_KEYW_RETURN TK_SYMBOL_SEMICOLON .

    $default  reduce using rule 68 (return_stmnt)


State 91

   95 pure_expr: TK_CONST_INTEGER .

    $default  reduce using rule 95 (pure_expr)


State 92

   96 pure_expr: TK_CONST_CHAR .

    $default  reduce using rule 96 (pure_expr)


State 93

   87 expression: l_value .

    $default  reduce using rule 87 (expression)


State 94

   97 pure_expr: func_call .

    $default  reduce using rule 97 (pure_expr)


State 95

   69 return_stmnt: TK_KEYW_RETURN expression . TK_SYMBOL_SEMICOLON
   88 pure_expr: expression . TK_OP_PLUS expression
   89          | expression . TK_OP_MINUS expression
   90          | expression . TK_OP_MULT expression
   91          | expression . TK_OP_DIV expression
   92          | expression . TK_OP_MOD expression

    TK_OP_PLUS           shift, and go to state 115
    TK_OP_MINUS          shift, and go to state 116
    TK_OP_MULT           shift, and go to state 117
    TK_OP_DIV            shift, and go to state 118
    TK_OP_MOD            shift, and go to state 119
    TK_SYMBOL_SEMICOLON  shift, and go to state 120


State 96

   86 expression: pure_expr .

    $default  reduce using rule 86 (expression)


State 97

   57 while_stmnt: TK_KEYW_WHILE TK_PAR_OPEN . @11 b_expression TK_PAR_CLOSE $@12 statement

    $default  reduce using rule 55 (@11)

    @11  go to state 121


State 98

   49 l_value: TK_IDENTIFIER TK_BRACKET_OPEN . expression TK_BRACKET_CLOSE

    TK_OP_PLUS        shift, and go to state 87
    TK_OP_MINUS       shift, and go to state 88
    TK_PAR_OPEN       shift, and go to state 89
    TK_IDENTIFIER     shift, and go to state 63
    TK_CONST_INTEGER  shift, and go to state 91
    TK_CONST_CHAR     shift, and go to state 92

    l_value     go to state 93
    func_call   go to state 94
    expression  go to state 122
    pure_expr   go to state 96


State 99

   60 func_call: TK_IDENTIFIER TK_PAR_OPEN . $@13 actual_param_l TK_PAR_CLOSE

    $default  reduce using rule 59 ($@13)

    $@13  go to state 123


State 100

   73 stmnt_list: statement stmnt_list .

    $default  reduce using rule 73 (stmnt_list)


State 101

   47 assignment: l_value TK_ASSIGNMENT . expression TK_SYMBOL_SEMICOLON

    TK_OP_PLUS        shift, and go to state 87
    TK_OP_MINUS       shift, and go to state 88
    TK_PAR_OPEN       shift, and go to state 89
    TK_IDENTIFIER     shift, and go to state 63
    TK_CONST_INTEGER  shift, and go to state 91
    TK_CONST_CHAR     shift, and go to state 92

    l_value     go to state 93
    func_call   go to state 94
    expression  go to state 124
    pure_expr   go to state 96


State 102

   58 void_func_call: func_call TK_SYMBOL_SEMICOLON .

    $default  reduce using rule 58 (void_func_call)


State 103

   71 compound_stmnt: TK_BRACE_OPEN stmnt_list TK_BRACE_CLOSE .

    $default  reduce using rule 71 (compound_stmnt)


State 104

   17 func_def: func_header $@5 local_def_list $@6 compound_stmnt .

    $default  reduce using rule 17 (func_def)


State 105

   38 def_one_array: TK_IDENTIFIER TK_BRACKET_OPEN TK_CONST_INTEGER TK_BRACKET_CLOSE .

    $default  reduce using rule 38 (def_one_array)


State 106

   28 formal_param: data_type TK_SYMBOL_AMPER TK_IDENTIFIER TK_BRACKET_OPEN . TK_BRACKET_CLOSE

    TK_BRACKET_CLOSE  shift, and go to state 125


State 107

   26 formal_param: data_type TK_IDENTIFIER TK_BRACKET_OPEN TK_BRACKET_CLOSE .

    $default  reduce using rule 26 (formal_param)


State 108

   78 b_expression: TK_OP_NOT . b_expression

    TK_OP_PLUS        shift, and go to state 87
    TK_OP_MINUS       shift, and go to state 88
    TK_OP_NOT         shift, and go to state 108
    TK_PAR_OPEN       shift, and go to state 109
    TK_IDENTIFIER     shift, and go to state 63
    TK_CONST_INTEGER  shift, and go to state 91
    TK_CONST_CHAR     shift, and go to state 92

    l_value       go to state 93
    func_call     go to state 94
    b_expression  go to state 126
    expression    go to state 111
    pure_expr     go to state 96


State 109

   79 b_expression: TK_PAR_OPEN . b_expression TK_PAR_CLOSE
   98 pure_expr: TK_PAR_OPEN . expression TK_PAR_CLOSE

    TK_OP_PLUS        shift, and go to state 87
    TK_OP_MINUS       shift, and go to state 88
    TK_OP_NOT         shift, and go to state 108
    TK_PAR_OPEN       shift, and go to state 109
    TK_IDENTIFIER     shift, and go to state 63
    TK_CONST_INTEGER  shift, and go to state 91
    TK_CONST_CHAR     shift, and go to state 92

    l_value       go to state 93
    func_call     go to state 94
    b_expression  go to state 127
    expression    go to state 128
    pure_expr     go to state 96


State 110

   51 if_stmnt: TK_KEYW_IF TK_PAR_OPEN b_expression . TK_PAR_CLOSE $@9 statement if_tail
   75 b_expression: b_expression . TK_OP_OR $@14 b_expression
   77             | b_expression . TK_OP_AND $@15 b_expression

    TK_OP_OR      shift, and go to state 129
    TK_OP_AND     shift, and go to state 130
    TK_PAR_CLOSE  shift, and go to state 131


State 111

   80 b_expression: expression . TK_OP_EQ expression
   81             | expression . TK_OP_NE expression
   82             | expression . TK_OP_GT expression
   83             | expression . TK_OP_LT expression
   84             | expression . TK_OP_GE expression
   85             | expression . TK_OP_LE expression
   88 pure_expr: expression . TK_OP_PLUS expression
   89          | expression . TK_OP_MINUS expression
   90          | expression . TK_OP_MULT expression
   91          | expression . TK_OP_DIV expression
   92          | expression . TK_OP_MOD expression

    TK_OP_PLUS   shift, and go to state 115
    TK_OP_MINUS  shift, and go to state 116
    TK_OP_MULT   shift, and go to state 117
    TK_OP_DIV    shift, and go to state 118
    TK_OP_MOD    shift, and go to state 119
    TK_OP_EQ     shift, and go to state 132
    TK_OP_NE     shift, and go to state 133
    TK_OP_GE     shift, and go to state 134
    TK_OP_GT     shift, and go to state 135
    TK_OP_LE     shift, and go to state 136
    TK_OP_LT     shift, and go to state 137


State 112

   88 pure_expr: expression . TK_OP_PLUS expression
   89          | expression . TK_OP_MINUS expression
   90          | expression . TK_OP_MULT expression
   91          | expression . TK_OP_DIV expression
   92          | expression . TK_OP_MOD expression
   93          | TK_OP_PLUS expression .

    $default  reduce using rule 93 (pure_expr)


State 113

   88 pure_expr: expression . TK_OP_PLUS expression
   89          | expression . TK_OP_MINUS expression
   90          | expression . TK_OP_MULT expression
   91          | expression . TK_OP_DIV expression
   92          | expression . TK_OP_MOD expression
   94          | TK_OP_MINUS expression .

    $default  reduce using rule 94 (pure_expr)


State 114

   88 pure_expr: expression . TK_OP_PLUS expression
   89          | expression . TK_OP_MINUS expression
   90          | expression . TK_OP_MULT expression
   91          | expression . TK_OP_DIV expression
   92          | expression . TK_OP_MOD expression
   98          | TK_PAR_OPEN expression . TK_PAR_CLOSE

    TK_OP_PLUS    shift, and go to state 115
    TK_OP_MINUS   shift, and go to state 116
    TK_OP_MULT    shift, and go to state 117
    TK_OP_DIV     shift, and go to state 118
    TK_OP_MOD     shift, and go to state 119
    TK_PAR_CLOSE  shift, and go to state 138


State 115

   88 pure_expr: expression TK_OP_PLUS . expression

    TK_OP_PLUS        shift, and go to state 87
    TK_OP_MINUS       shift, and go to state 88
    TK_PAR_OPEN       shift, and go to state 89
    TK_IDENTIFIER     shift, and go to state 63
    TK_CONST_INTEGER  shift, and go to state 91
    TK_CONST_CHAR     shift, and go to state 92

    l_value     go to state 93
    func_call   go to state 94
    expression  go to state 139
    pure_expr   go to state 96


State 116

   89 pure_expr: expression TK_OP_MINUS . expression

    TK_OP_PLUS        shift, and go to state 87
    TK_OP_MINUS       shift, and go to state 88
    TK_PAR_OPEN       shift, and go to state 89
    TK_IDENTIFIER     shift, and go to state 63
    TK_CONST_INTEGER  shift, and go to state 91
    TK_CONST_CHAR     shift, and go to state 92

    l_value     go to state 93
    func_call   go to state 94
    expression  go to state 140
    pure_expr   go to state 96


State 117

   90 pure_expr: expression TK_OP_MULT . expression

    TK_OP_PLUS        shift, and go to state 87
    TK_OP_MINUS       shift, and go to state 88
    TK_PAR_OPEN       shift, and go to state 89
    TK_IDENTIFIER     shift, and go to state 63
    TK_CONST_INTEGER  shift, and go to state 91
    TK_CONST_CHAR     shift, and go to state 92

    l_value     go to state 93
    func_call   go to state 94
    expression  go to state 141
    pure_expr   go to state 96


State 118

   91 pure_expr: expression TK_OP_DIV . expression

    TK_OP_PLUS        shift, and go to state 87
    TK_OP_MINUS       shift, and go to state 88
    TK_PAR_OPEN       shift, and go to state 89
    TK_IDENTIFIER     shift, and go to state 63
    TK_CONST_INTEGER  shift, and go to state 91
    TK_CONST_CHAR     shift, and go to state 92

    l_value     go to state 93
    func_call   go to state 94
    expression  go to state 142
    pure_expr   go to state 96


State 119

   92 pure_expr: expression TK_OP_MOD . expression

    TK_OP_PLUS        shift, and go to state 87
    TK_OP_MINUS       shift, and go to state 88
    TK_PAR_OPEN       shift, and go to state 89
    TK_IDENTIFIER     shift, and go to state 63
    TK_CONST_INTEGER  shift, and go to state 91
    TK_CONST_CHAR     shift, and go to state 92

    l_value     go to state 93
    func_call   go to state 94
    expression  go to state 143
    pure_expr   go to state 96


State 120

   69 return_stmnt: TK_KEYW_RETURN expression TK_SYMBOL_SEMICOLON .

    $default  reduce using rule 69 (return_stmnt)


State 121

   57 while_stmnt: TK_KEYW_WHILE TK_PAR_OPEN @11 . b_expression TK_PAR_CLOSE $@12 statement

    TK_OP_PLUS        shift, and go to state 87
    TK_OP_MINUS       shift, and go to state 88
    TK_OP_NOT         shift, and go to state 108
    TK_PAR_OPEN       shift, and go to state 109
    TK_IDENTIFIER     shift, and go to state 63
    TK_CONST_INTEGER  shift, and go to state 91
    TK_CONST_CHAR     shift, and go to state 92

    l_value       go to state 93
    func_call     go to state 94
    b_expression  go to state 144
    expression    go to state 111
    pure_expr     go to state 96


State 122

   49 l_value: TK_IDENTIFIER TK_BRACKET_OPEN expression . TK_BRACKET_CLOSE
   88 pure_expr: expression . TK_OP_PLUS expression
   89          | expression . TK_OP_MINUS expression
   90          | expression . TK_OP_MULT expression
   91          | expression . TK_OP_DIV expression
   92          | expression . TK_OP_MOD expression

    TK_OP_PLUS        shift, and go to state 115
    TK_OP_MINUS       shift, and go to state 116
    TK_OP_MULT        shift, and go to state 117
    TK_OP_DIV         shift, and go to state 118
    TK_OP_MOD         shift, and go to state 119
    TK_BRACKET_CLOSE  shift, and go to state 145


State 123

   60 func_call: TK_IDENTIFIER TK_PAR_OPEN $@13 . actual_param_l TK_PAR_CLOSE

    TK_OP_PLUS        shift, and go to state 87
    TK_OP_MINUS       shift, and go to state 88
    TK_PAR_OPEN       shift, and go to state 89
    TK_IDENTIFIER     shift, and go to state 146
    TK_CONST_INTEGER  shift, and go to state 91
    TK_CONST_CHAR     shift, and go to state 92
    TK_CONST_STRING   shift, and go to state 147

    $default  reduce using rule 61 (actual_param_l)

    l_value         go to state 93
    func_call       go to state 94
    actual_param_l  go to state 148
    actual_param    go to state 149
    expression      go to state 150
    pure_expr       go to state 151


State 124

   47 assignment: l_value TK_ASSIGNMENT expression . TK_SYMBOL_SEMICOLON
   88 pure_expr: expression . TK_OP_PLUS expression
   89          | expression . TK_OP_MINUS expression
   90          | expression . TK_OP_MULT expression
   91          | expression . TK_OP_DIV expression
   92          | expression . TK_OP_MOD expression

    TK_OP_PLUS           shift, and go to state 115
    TK_OP_MINUS          shift, and go to state 116
    TK_OP_MULT           shift, and go to state 117
    TK_OP_DIV            shift, and go to state 118
    TK_OP_MOD            shift, and go to state 119
    TK_SYMBOL_SEMICOLON  shift, and go to state 152


State 125

   28 formal_param: data_type TK_SYMBOL_AMPER TK_IDENTIFIER TK_BRACKET_OPEN TK_BRACKET_CLOSE .

    $default  reduce using rule 28 (formal_param)


State 126

   75 b_expression: b_expression . TK_OP_OR $@14 b_expression
   77             | b_expression . TK_OP_AND $@15 b_expression
   78             | TK_OP_NOT b_expression .

    $default  reduce using rule 78 (b_expression)


State 127

   75 b_expression: b_expression . TK_OP_OR $@14 b_expression
   77             | b_expression . TK_OP_AND $@15 b_expression
   79             | TK_PAR_OPEN b_expression . TK_PAR_CLOSE

    TK_OP_OR      shift, and go to state 129
    TK_OP_AND     shift, and go to state 130
    TK_PAR_CLOSE  shift, and go to state 153


State 128

   80 b_expression: expression . TK_OP_EQ expression
   81             | expression . TK_OP_NE expression
   82             | expression . TK_OP_GT expression
   83             | expression . TK_OP_LT expression
   84             | expression . TK_OP_GE expression
   85             | expression . TK_OP_LE expression
   88 pure_expr: expression . TK_OP_PLUS expression
   89          | expression . TK_OP_MINUS expression
   90          | expression . TK_OP_MULT expression
   91          | expression . TK_OP_DIV expression
   92          | expression . TK_OP_MOD expression
   98          | TK_PAR_OPEN expression . TK_PAR_CLOSE

    TK_OP_PLUS    shift, and go to state 115
    TK_OP_MINUS   shift, and go to state 116
    TK_OP_MULT    shift, and go to state 117
    TK_OP_DIV     shift, and go to state 118
    TK_OP_MOD     shift, and go to state 119
    TK_OP_EQ      shift, and go to state 132
    TK_OP_NE      shift, and go to state 133
    TK_OP_GE      shift, and go to state 134
    TK_OP_GT      shift, and go to state 135
    TK_OP_LE      shift, and go to state 136
    TK_OP_LT      shift, and go to state 137
    TK_PAR_CLOSE  shift, and go to state 138


State 129

   75 b_expression: b_expression TK_OP_OR . $@14 b_expression

    $default  reduce using rule 74 ($@14)

    $@14  go to state 154


State 130

   77 b_expression: b_expression TK_OP_AND . $@15 b_expression

    $default  reduce using rule 76 ($@15)

    $@15  go to state 155


State 131

   51 if_stmnt: TK_KEYW_IF TK_PAR_OPEN b_expression TK_PAR_CLOSE . $@9 statement if_tail

    $default  reduce using rule 50 ($@9)

    $@9  go to state 156


State 132

   80 b_expression: expression TK_OP_EQ . expression

    TK_OP_PLUS        shift, and go to state 87
    TK_OP_MINUS       shift, and go to state 88
    TK_PAR_OPEN       shift, and go to state 89
    TK_IDENTIFIER     shift, and go to state 63
    TK_CONST_INTEGER  shift, and go to state 91
    TK_CONST_CHAR     shift, and go to state 92

    l_value     go to state 93
    func_call   go to state 94
    expression  go to state 157
    pure_expr   go to state 96


State 133

   81 b_expression: expression TK_OP_NE . expression

    TK_OP_PLUS        shift, and go to state 87
    TK_OP_MINUS       shift, and go to state 88
    TK_PAR_OPEN       shift, and go to state 89
    TK_IDENTIFIER     shift, and go to state 63
    TK_CONST_INTEGER  shift, and go to state 91
    TK_CONST_CHAR     shift, and go to state 92

    l_value     go to state 93
    func_call   go to state 94
    expression  go to state 158
    pure_expr   go to state 96


State 134

   84 b_expression: expression TK_OP_GE . expression

    TK_OP_PLUS        shift, and go to state 87
    TK_OP_MINUS       shift, and go to state 88
    TK_PAR_OPEN       shift, and go to state 89
    TK_IDENTIFIER     shift, and go to state 63
    TK_CONST_INTEGER  shift, and go to state 91
    TK_CONST_CHAR     shift, and go to state 92

    l_value     go to state 93
    func_call   go to state 94
    expression  go to state 159
    pure_expr   go to state 96


State 135

   82 b_expression: expression TK_OP_GT . expression

    TK_OP_PLUS        shift, and go to state 87
    TK_OP_MINUS       shift, and go to state 88
    TK_PAR_OPEN       shift, and go to state 89
    TK_IDENTIFIER     shift, and go to state 63
    TK_CONST_INTEGER  shift, and go to state 91
    TK_CONST_CHAR     shift, and go to state 92

    l_value     go to state 93
    func_call   go to state 94
    expression  go to state 160
    pure_expr   go to state 96


State 136

   85 b_expression: expression TK_OP_LE . expression

    TK_OP_PLUS        shift, and go to state 87
    TK_OP_MINUS       shift, and go to state 88
    TK_PAR_OPEN       shift, and go to state 89
    TK_IDENTIFIER     shift, and go to state 63
    TK_CONST_INTEGER  shift, and go to state 91
    TK_CONST_CHAR     shift, and go to state 92

    l_value     go to state 93
    func_call   go to state 94
    expression  go to state 161
    pure_expr   go to state 96


State 137

   83 b_expression: expression TK_OP_LT . expression

    TK_OP_PLUS        shift, and go to state 87
    TK_OP_MINUS       shift, and go to state 88
    TK_PAR_OPEN       shift, and go to state 89
    TK_IDENTIFIER     shift, and go to state 63
    TK_CONST_INTEGER  shift, and go to state 91
    TK_CONST_CHAR     shift, and go to state 92

    l_value     go to state 93
    func_call   go to state 94
    expression  go to state 162
    pure_expr   go to state 96


State 138

   98 pure_expr: TK_PAR_OPEN expression TK_PAR_CLOSE .

    $default  reduce using rule 98 (pure_expr)


State 139

   88 pure_expr: expression . TK_OP_PLUS expression
   88          | expression TK_OP_PLUS expression .
   89          | expression . TK_OP_MINUS expression
   90          | expression . TK_OP_MULT expression
   91          | expression . TK_OP_DIV expression
   92          | expression . TK_OP_MOD expression

    TK_OP_MULT  shift, and go to state 117
    TK_OP_DIV   shift, and go to state 118
    TK_OP_MOD   shift, and go to state 119

    $default  reduce using rule 88 (pure_expr)


State 140

   88 pure_expr: expression . TK_OP_PLUS expression
   89          | expression . TK_OP_MINUS expression
   89          | expression TK_OP_MINUS expression .
   90          | expression . TK_OP_MULT expression
   91          | expression . TK_OP_DIV expression
   92          | expression . TK_OP_MOD expression

    TK_OP_MULT  shift, and go to state 117
    TK_OP_DIV   shift, and go to state 118
    TK_OP_MOD   shift, and go to state 119

    $default  reduce using rule 89 (pure_expr)


State 141

   88 pure_expr: expression . TK_OP_PLUS expression
   89          | expression . TK_OP_MINUS expression
   90          | expression . TK_OP_MULT expression
   90          | expression TK_OP_MULT expression .
   91          | expression . TK_OP_DIV expression
   92          | expression . TK_OP_MOD expression

    TK_OP_MOD  shift, and go to state 119

    $default  reduce using rule 90 (pure_expr)


State 142

   88 pure_expr: expression . TK_OP_PLUS expression
   89          | expression . TK_OP_MINUS expression
   90          | expression . TK_OP_MULT expression
   91          | expression . TK_OP_DIV expression
   91          | expression TK_OP_DIV expression .
   92          | expression . TK_OP_MOD expression

    TK_OP_MOD  shift, and go to state 119

    $default  reduce using rule 91 (pure_expr)


State 143

   88 pure_expr: expression . TK_OP_PLUS expression
   89          | expression . TK_OP_MINUS expression
   90          | expression . TK_OP_MULT expression
   91          | expression . TK_OP_DIV expression
   92          | expression . TK_OP_MOD expression
   92          | expression TK_OP_MOD expression .

    $default  reduce using rule 92 (pure_expr)


State 144

   57 while_stmnt: TK_KEYW_WHILE TK_PAR_OPEN @11 b_expression . TK_PAR_CLOSE $@12 statement
   75 b_expression: b_expression . TK_OP_OR $@14 b_expression
   77             | b_expression . TK_OP_AND $@15 b_expression

    TK_OP_OR      shift, and go to state 129
    TK_OP_AND     shift, and go to state 130
    TK_PAR_CLOSE  shift, and go to state 163


State 145

   49 l_value: TK_IDENTIFIER TK_BRACKET_OPEN expression TK_BRACKET_CLOSE .

    $default  reduce using rule 49 (l_value)


State 146

   48 l_value: TK_IDENTIFIER .
   49        | TK_IDENTIFIER . TK_BRACKET_OPEN expression TK_BRACKET_CLOSE
   60 func_call: TK_IDENTIFIER . TK_PAR_OPEN $@13 actual_param_l TK_PAR_CLOSE
   65 actual_param: TK_IDENTIFIER .
   66             | TK_IDENTIFIER . TK_BRACKET_OPEN expression TK_BRACKET_CLOSE

    TK_BRACKET_OPEN  shift, and go to state 164
    TK_PAR_OPEN      shift, and go to state 99

    TK_PAR_CLOSE     reduce using rule 65 (actual_param)
    TK_SYMBOL_COMMA  reduce using rule 65 (actual_param)
    $default         reduce using rule 48 (l_value)


State 147

   67 actual_param: TK_CONST_STRING .

    $default  reduce using rule 67 (actual_param)


State 148

   60 func_call: TK_IDENTIFIER TK_PAR_OPEN $@13 actual_param_l . TK_PAR_CLOSE

    TK_PAR_CLOSE  shift, and go to state 165


State 149

   62 actual_param_l: actual_param .
   63               | actual_param . TK_SYMBOL_COMMA actual_param_l

    TK_SYMBOL_COMMA  shift, and go to state 166

    $default  reduce using rule 62 (actual_param_l)


State 150

   88 pure_expr: expression . TK_OP_PLUS expression
   89          | expression . TK_OP_MINUS expression
   90          | expression . TK_OP_MULT expression
   91          | expression . TK_OP_DIV expression
   92          | expression . TK_OP_MOD expression

    TK_OP_PLUS   shift, and go to state 115
    TK_OP_MINUS  shift, and go to state 116
    TK_OP_MULT   shift, and go to state 117
    TK_OP_DIV    shift, and go to state 118
    TK_OP_MOD    shift, and go to state 119


State 151

   64 actual_param: pure_expr .
   86 expression: pure_expr .

    TK_PAR_CLOSE     reduce using rule 64 (actual_param)
    TK_SYMBOL_COMMA  reduce using rule 64 (actual_param)
    $default         reduce using rule 86 (expression)


State 152

   47 assignment: l_value TK_ASSIGNMENT expression TK_SYMBOL_SEMICOLON .

    $default  reduce using rule 47 (assignment)


State 153

   79 b_expression: TK_PAR_OPEN b_expression TK_PAR_CLOSE .

    $default  reduce using rule 79 (b_expression)


State 154

   75 b_expression: b_expression TK_OP_OR $@14 . b_expression

    TK_OP_PLUS        shift, and go to state 87
    TK_OP_MINUS       shift, and go to state 88
    TK_OP_NOT         shift, and go to state 108
    TK_PAR_OPEN       shift, and go to state 109
    TK_IDENTIFIER     shift, and go to state 63
    TK_CONST_INTEGER  shift, and go to state 91
    TK_CONST_CHAR     shift, and go to state 92

    l_value       go to state 93
    func_call     go to state 94
    b_expression  go to state 167
    expression    go to state 111
    pure_expr     go to state 96


State 155

   77 b_expression: b_expression TK_OP_AND $@15 . b_expression

    TK_OP_PLUS        shift, and go to state 87
    TK_OP_MINUS       shift, and go to state 88
    TK_OP_NOT         shift, and go to state 108
    TK_PAR_OPEN       shift, and go to state 109
    TK_IDENTIFIER     shift, and go to state 63
    TK_CONST_INTEGER  shift, and go to state 91
    TK_CONST_CHAR     shift, and go to state 92

    l_value       go to state 93
    func_call     go to state 94
    b_expression  go to state 168
    expression    go to state 111
    pure_expr     go to state 96


State 156

   51 if_stmnt: TK_KEYW_IF TK_PAR_OPEN b_expression TK_PAR_CLOSE $@9 . statement if_tail

    error                shift, and go to state 58
    TK_KEYW_IF           shift, and go to state 59
    TK_KEYW_RETURN       shift, and go to state 60
    TK_KEYW_WHILE        shift, and go to state 61
    TK_BRACE_OPEN        shift, and go to state 45
    TK_SYMBOL_SEMICOLON  shift, and go to state 62
    TK_IDENTIFIER        shift, and go to state 63

    statement       go to state 169
    assignment      go to state 65
    l_value         go to state 66
    if_stmnt        go to state 67
    while_stmnt     go to state 68
    void_func_call  go to state 69
    func_call       go to state 70
    return_stmnt    go to state 71
    empty_stmnt     go to state 72
    compound_stmnt  go to state 73


State 157

   80 b_expression: expression TK_OP_EQ expression .
   88 pure_expr: expression . TK_OP_PLUS expression
   89          | expression . TK_OP_MINUS expression
   90          | expression . TK_OP_MULT expression
   91          | expression . TK_OP_DIV expression
   92          | expression . TK_OP_MOD expression

    TK_OP_PLUS   shift, and go to state 115
    TK_OP_MINUS  shift, and go to state 116
    TK_OP_MULT   shift, and go to state 117
    TK_OP_DIV    shift, and go to state 118
    TK_OP_MOD    shift, and go to state 119

    $default  reduce using rule 80 (b_expression)


State 158

   81 b_expression: expression TK_OP_NE expression .
   88 pure_expr: expression . TK_OP_PLUS expression
   89          | expression . TK_OP_MINUS expression
   90          | expression . TK_OP_MULT expression
   91          | expression . TK_OP_DIV expression
   92          | expression . TK_OP_MOD expression

    TK_OP_PLUS   shift, and go to state 115
    TK_OP_MINUS  shift, and go to state 116
    TK_OP_MULT   shift, and go to state 117
    TK_OP_DIV    shift, and go to state 118
    TK_OP_MOD    shift, and go to state 119

    $default  reduce using rule 81 (b_expression)


State 159

   84 b_expression: expression TK_OP_GE expression .
   88 pure_expr: expression . TK_OP_PLUS expression
   89          | expression . TK_OP_MINUS expression
   90          | expression . TK_OP_MULT expression
   91          | expression . TK_OP_DIV expression
   92          | expression . TK_OP_MOD expression

    TK_OP_PLUS   shift, and go to state 115
    TK_OP_MINUS  shift, and go to state 116
    TK_OP_MULT   shift, and go to state 117
    TK_OP_DIV    shift, and go to state 118
    TK_OP_MOD    shift, and go to state 119

    $default  reduce using rule 84 (b_expression)


State 160

   82 b_expression: expression TK_OP_GT expression .
   88 pure_expr: expression . TK_OP_PLUS expression
   89          | expression . TK_OP_MINUS expression
   90          | expression . TK_OP_MULT expression
   91          | expression . TK_OP_DIV expression
   92          | expression . TK_OP_MOD expression

    TK_OP_PLUS   shift, and go to state 115
    TK_OP_MINUS  shift, and go to state 116
    TK_OP_MULT   shift, and go to state 117
    TK_OP_DIV    shift, and go to state 118
    TK_OP_MOD    shift, and go to state 119

    $default  reduce using rule 82 (b_expression)


State 161

   85 b_expression: expression TK_OP_LE expression .
   88 pure_expr: expression . TK_OP_PLUS expression
   89          | expression . TK_OP_MINUS expression
   90          | expression . TK_OP_MULT expression
   91          | expression . TK_OP_DIV expression
   92          | expression . TK_OP_MOD expression

    TK_OP_PLUS   shift, and go to state 115
    TK_OP_MINUS  shift, and go to state 116
    TK_OP_MULT   shift, and go to state 117
    TK_OP_DIV    shift, and go to state 118
    TK_OP_MOD    shift, and go to state 119

    $default  reduce using rule 85 (b_expression)


State 162

   83 b_expression: expression TK_OP_LT expression .
   88 pure_expr: expression . TK_OP_PLUS expression
   89          | expression . TK_OP_MINUS expression
   90          | expression . TK_OP_MULT expression
   91          | expression . TK_OP_DIV expression
   92          | expression . TK_OP_MOD expression

    TK_OP_PLUS   shift, and go to state 115
    TK_OP_MINUS  shift, and go to state 116
    TK_OP_MULT   shift, and go to state 117
    TK_OP_DIV    shift, and go to state 118
    TK_OP_MOD    shift, and go to state 119

    $default  reduce using rule 83 (b_expression)


State 163

   57 while_stmnt: TK_KEYW_WHILE TK_PAR_OPEN @11 b_expression TK_PAR_CLOSE . $@12 statement

    $default  reduce using rule 56 ($@12)

    $@12  go to state 170


State 164

   49 l_value: TK_IDENTIFIER TK_BRACKET_OPEN . expression TK_BRACKET_CLOSE
   66 actual_param: TK_IDENTIFIER TK_BRACKET_OPEN . expression TK_BRACKET_CLOSE

    TK_OP_PLUS        shift, and go to state 87
    TK_OP_MINUS       shift, and go to state 88
    TK_PAR_OPEN       shift, and go to state 89
    TK_IDENTIFIER     shift, and go to state 63
    TK_CONST_INTEGER  shift, and go to state 91
    TK_CONST_CHAR     shift, and go to state 92

    l_value     go to state 93
    func_call   go to state 94
    expression  go to state 171
    pure_expr   go to state 96


State 165

   60 func_call: TK_IDENTIFIER TK_PAR_OPEN $@13 actual_param_l TK_PAR_CLOSE .

    $default  reduce using rule 60 (func_call)


State 166

   63 actual_param_l: actual_param TK_SYMBOL_COMMA . actual_param_l

    TK_OP_PLUS        shift, and go to state 87
    TK_OP_MINUS       shift, and go to state 88
    TK_PAR_OPEN       shift, and go to state 89
    TK_IDENTIFIER     shift, and go to state 146
    TK_CONST_INTEGER  shift, and go to state 91
    TK_CONST_CHAR     shift, and go to state 92
    TK_CONST_STRING   shift, and go to state 147

    $default  reduce using rule 61 (actual_param_l)

    l_value         go to state 93
    func_call       go to state 94
    actual_param_l  go to state 172
    actual_param    go to state 149
    expression      go to state 150
    pure_expr       go to state 151


State 167

   75 b_expression: b_expression . TK_OP_OR $@14 b_expression
   75             | b_expression TK_OP_OR $@14 b_expression .
   77             | b_expression . TK_OP_AND $@15 b_expression

    TK_OP_AND  shift, and go to state 130

    $default  reduce using rule 75 (b_expression)


State 168

   75 b_expression: b_expression . TK_OP_OR $@14 b_expression
   77             | b_expression . TK_OP_AND $@15 b_expression
   77             | b_expression TK_OP_AND $@15 b_expression .

    $default  reduce using rule 77 (b_expression)


State 169

   51 if_stmnt: TK_KEYW_IF TK_PAR_OPEN b_expression TK_PAR_CLOSE $@9 statement . if_tail

    TK_KEYW_ELSE  shift, and go to state 173

    TK_KEYW_ELSE  [reduce using rule 52 (if_tail)]
    $default      reduce using rule 52 (if_tail)

    if_tail  go to state 174


State 170

   57 while_stmnt: TK_KEYW_WHILE TK_PAR_OPEN @11 b_expression TK_PAR_CLOSE $@12 . statement

    error                shift, and go to state 58
    TK_KEYW_IF           shift, and go to state 59
    TK_KEYW_RETURN       shift, and go to state 60
    TK_KEYW_WHILE        shift, and go to state 61
    TK_BRACE_OPEN        shift, and go to state 45
    TK_SYMBOL_SEMICOLON  shift, and go to state 62
    TK_IDENTIFIER        shift, and go to state 63

    statement       go to state 175
    assignment      go to state 65
    l_value         go to state 66
    if_stmnt        go to state 67
    while_stmnt     go to state 68
    void_func_call  go to state 69
    func_call       go to state 70
    return_stmnt    go to state 71
    empty_stmnt     go to state 72
    compound_stmnt  go to state 73


State 171

   49 l_value: TK_IDENTIFIER TK_BRACKET_OPEN expression . TK_BRACKET_CLOSE
   66 actual_param: TK_IDENTIFIER TK_BRACKET_OPEN expression . TK_BRACKET_CLOSE
   88 pure_expr: expression . TK_OP_PLUS expression
   89          | expression . TK_OP_MINUS expression
   90          | expression . TK_OP_MULT expression
   91          | expression . TK_OP_DIV expression
   92          | expression . TK_OP_MOD expression

    TK_OP_PLUS        shift, and go to state 115
    TK_OP_MINUS       shift, and go to state 116
    TK_OP_MULT        shift, and go to state 117
    TK_OP_DIV         shift, and go to state 118
    TK_OP_MOD         shift, and go to state 119
    TK_BRACKET_CLOSE  shift, and go to state 176


State 172

   63 actual_param_l: actual_param TK_SYMBOL_COMMA actual_param_l .

    $default  reduce using rule 63 (actual_param_l)


State 173

   54 if_tail: TK_KEYW_ELSE . @10 statement

    $default  reduce using rule 53 (@10)

    @10  go to state 177


State 174

   51 if_stmnt: TK_KEYW_IF TK_PAR_OPEN b_expression TK_PAR_CLOSE $@9 statement if_tail .

    $default  reduce using rule 51 (if_stmnt)


State 175

   57 while_stmnt: TK_KEYW_WHILE TK_PAR_OPEN @11 b_expression TK_PAR_CLOSE $@12 statement .

    $default  reduce using rule 57 (while_stmnt)


State 176

   49 l_value: TK_IDENTIFIER TK_BRACKET_OPEN expression TK_BRACKET_CLOSE .
   66 actual_param: TK_IDENTIFIER TK_BRACKET_OPEN expression TK_BRACKET_CLOSE .

    TK_PAR_CLOSE     reduce using rule 66 (actual_param)
    TK_SYMBOL_COMMA  reduce using rule 66 (actual_param)
    $default         reduce using rule 49 (l_value)


State 177

   54 if_tail: TK_KEYW_ELSE @10 . statement

    error                shift, and go to state 58
    TK_KEYW_IF           shift, and go to state 59
    TK_KEYW_RETURN       shift, and go to state 60
    TK_KEYW_WHILE        shift, and go to state 61
    TK_BRACE_OPEN        shift, and go to state 45
    TK_SYMBOL_SEMICOLON  shift, and go to state 62
    TK_IDENTIFIER        shift, and go to state 63

    statement       go to state 178
    assignment      go to state 65
    l_value         go to state 66
    if_stmnt        go to state 67
    while_stmnt     go to state 68
    void_func_call  go to state 69
    func_call       go to state 70
    return_stmnt    go to state 71
    empty_stmnt     go to state 72
    compound_stmnt  go to state 73


State 178

   54 if_tail: TK_KEYW_ELSE @10 statement .

    $default  reduce using rule 54 (if_tail)
